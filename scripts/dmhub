#!/usr/bin/env bash
#
# Script name: dmhub
# Description: a hub that you can execute all the other scripts from
# Dependencies: dmenu, executable dmscripts, all the dependancies from dmscripts
# GitLab: https://www.gitlab.com/dwt1/hub
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: n-e0

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

DMCONFIG="${HOME}/.config/dmscripts/dmconf"
# No issues should arrise since it won't even be sourced if the file doesn't exist
# shellcheck disable=SC1090	
[ -f "${DMCONFIG}" ] && source "${DMCONFIG}"

# FIX: Don't hardcode paths
path="Git-repos/dmscripts"

# TODO: Generate this list
declare -A options
    options[dman]="$HOME/$path/dman"
    options[dcolors]="$HOME/$path/dcolors"
    options[dmkill]="$HOME/$path/dmkill"
    options[dmlogout]="$HOME/$path/dmlogout"
    options[dmqute]="$HOME/$path/dmqute"
    options[dmred]="$HOME/$path/dmred"
    options[dmscrot]="$HOME/$path/dmscrot"
    options[dmsearch]="$HOME/$path/dmsearch"

declare -A options_clean
    for i in "${!options[@]}"; do
        [[ -f ${options["${i}"]} ]] && options_clean["${i}"]=${options["${i}"]}
    done

choice=$(printf '%s\n' "${!options_clean[@]}" | sort | dmenu -i -l 20 -p 'Run Script:' "$@")

if [ "$choice" ]; then
    cfg=$(printf '%s\n' "${options_clean["${choice}"]}")
    bash "$cfg"

else
    echo "Program terminated." && exit 0
fi
