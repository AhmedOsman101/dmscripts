#!/usr/bin/env bash
#
# Script name: dm-youtube
# Description: Youtube subscription manager without API access
# Dependencies: dmenu, curl, a browser (brave by default)
# Gitlab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: HostGrady

# pipefail setup
set -euo pipefail

_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[  -f "${_path}/_dm-helper.sh" ]]; then
  # shellcheck disable=SC1090,SC1091
  source "${_path}/_dm-helper.sh"
else
  # shellcheck disable=SC1090
  echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"

# Sorts the array and lets you select a channel with dmenu
# As this is loaded from other file it is technically not defined
# shellcheck disable=SC2154
choice=$(printf '%s\n' "${!youtube_channels[@]}" | sort | dmenu -i -l 20 -p 'Select Channel:' "$@")

# The "chosen" variable takes the choice variable, sets it back through the array, chooses the Youtube link and turns it into the RSS link
chosen="$(curl -s "${youtube_channels[${choice}]}" | grep -i rss | sed '0,/^.*RSS/ s//RSS/' | cut -d'"' -f3)"

# Takes the RSS link and prints out the titles and video links, then you pick your video with dmenu
video_select=$(curl -s "$chosen" | grep "media:title\|media:content url="| cut -d'"' -f2 | cut -d'>' -f2 | cut -d'<' -f1 | dmenu -i -l 20 -p "Select Video:")

# Until loop: until the video_select variable contains "http" in it, it doesn't even try to load it in a browser but instead it makes you reselect the video
until [[ "$video_select" == http* ]]; do 
  video_select=$(curl -s "$chosen" | grep "media:title\|media:content url="| cut -d'"' -f2 | cut -d'>' -f2 | cut -d'<' -f1 | dmenu -i -l 20 -p "Error! Please select the link not a title:")
done
# After the respective video is chosen, run it in your web browser
# shellcheck disable=SC2154
$youtube_browser "$video_select"
